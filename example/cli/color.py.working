from cli.curses_color import CursesColor

import curses


def main(screen):
    # Instantiate the CursesColor class
    curses_color = CursesColor()

    # Turn off echoing and enable cbreak mode
    curses.noecho()
    curses.cbreak()

    # Enable keypad mode
    screen.keypad(True)

    # Clear the screen
    screen.clear()

    # Display all color pairs
    for color_pair_name in curses_color.COLOR_PAIRS.keys():
        screen.addstr(color_pair_name, getattr(curses_color, color_pair_name))
    else:
        screen.addstr("\n\n")
    
    # y = 0
    # for color_pair_name in curses_color.COLOR_PAIRS.keys():
    #     screen.addstr(y, 0, color_pair_name, getattr(curses_color, color_pair_name))
    #     y+=1

    # Display specific color pairs
    screen.addstr("COLOR_PAIR_RED_ON_BLACK", curses_color.COLOR_PAIR_RED_ON_BLACK)
    screen.addstr("COLOR_PAIR_GREEN_ON_BLACK", curses_color.COLOR_PAIR_GREEN_ON_BLACK)
    screen.addstr("COLOR_PAIR_BLUE_ON_BLACK", curses_color.COLOR_PAIR_BLUE_ON_BLACK)
    screen.addstr("\n\n")

    # Display custom color pairs
    curses.init_pair(100, CursesColor.COLOR_WHITE, CursesColor.COLOR_TURQUOISE)
    curses.init_pair(101, CursesColor.COLOR_BLACK, CursesColor.COLOR_GOLD)
    curses.init_pair(102, CursesColor.COLOR_NAVY, CursesColor.COLOR_WHITE)
    screen.addstr("COLOR_PAIR_WHITE_ON_TURQUOISE", curses.color_pair(100))
    screen.addstr("COLOR_PAIR_BLACK_ON_GOLD", curses.color_pair(101))
    screen.addstr("COLOR_PAIR_NAVY_ON_WHITE", curses.color_pair(102) | curses.A_BOLD)
    screen.addstr("\n\n")
    
    # Refresh the screen
    screen.refresh()

    # Wait for user input
    screen.getch()

    # Restore terminal settings
    curses.nocbreak()
    screen.keypad(False)
    curses.echo()


if __name__ == '__main__':
    try:
        curses.wrapper(main)
    except KeyboardInterrupt:
        pass